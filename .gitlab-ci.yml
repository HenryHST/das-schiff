variables:
  IMAGE_NAME: artifactory.devops.telekom.de/schiff-docker/engine/schiff-operator

stages:
  - build
  - test
  - release

.base:
  tags:
    - otc_run_docker_k8s

.go:
  extends: .base
  image:
    name: golang:1.16
    entrypoint: ["/bin/bash"]
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
    # PATH: $PATH:$GOPATH/bin
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/
      - testbin/

binary:
  stage: build
  extends: .go
  script:
    - make

test:
  stage: test
  extends: .go
  variables:
    ENVTEST_ASSETS_DIR: $CI_PROJECT_DIR/testbin
  script:
    - make generate manifests
    - mkdir -p $ENVTEST_ASSETS_DIR
    - source hack/setup-envtest.sh
    - fetch_envtest_tools $ENVTEST_ASSETS_DIR
    - setup_envtest_env $ENVTEST_ASSETS_DIR
    - go test ./... -coverprofile cover.out
    - go tool cover -func cover.out | grep total

container-image:
  stage: build
  extends: .base
  image:
    name: artifactory.devops.telekom.de/gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $IMAGE_NAME:$CI_COMMIT_REF_SLUG
      --cache=true --cache-repo $IMAGE_NAME
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --build-arg no_proxy=$no_proxy
      --build-arg VERSION=$CI_COMMIT_SHORT_SHA

release-image:
  stage: release
  extends: .base
  image:
    name: artifactory.devops.telekom.de/gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - tags
    
  before_script:
    - 'echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}," > /kaniko/.docker/config.json'
    - 'echo "\"artifactory.devops.telekom.de\":{\"username\":\"$ARTIFACTORY_USERNAME\",\"password\":\"$ARTIFACTORY_TOKEN\"}," >> /kaniko/.docker/config.json'
    - 'echo "\"harbor.das-schiff.telekom.de\":{\"auth\":\"$HARBOR_TOKEN\"}}," >> /kaniko/.docker/config.json'
    - 'echo "\"proxies\": { \"default\": { \"httpProxy\": \"${http_proxy}\", \"httpsProxy\": \"${https_proxy}\", \"noProxy\": \"${no_proxy}\"}}}" >> /kaniko/.docker/config.json'
    - cat  /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $IMAGE_NAME:${CI_COMMIT_TAG:1}
      --destination harbor.das-schiff.telekom.de/schiff/schiff-operator:${CI_COMMIT_TAG:1}
      --cache=true --cache-repo $IMAGE_NAME
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --build-arg no_proxy=$no_proxy
      --build-arg VERSION=${CI_COMMIT_TAG:1}
  artifacts:
    when: always
    paths:
      - /kaniko/.docker/config.json
      - /kaniko/.docker/*
